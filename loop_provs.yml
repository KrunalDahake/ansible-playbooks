- name: provisioning all the servers with packages
  hosts: all
  become: yes
  tasks:
        - name: install packages on CentOS
          yum:
              name: "{{item}}"
              state: present
          when: ansible_distribution == "CentOS"
          loop:
              - ntp
              - wget
              - zip
              - unzip

        - name: install ntp package on Ubuntu
          apt:
              name: "{{item}}"
              state: present
          when: ansible_distribution == "Ubuntu"
          loop: "{{package_var}}"

        - name: copy the contents into banner file
          copy: 
              content: "This {{ansible_distribution}} server is managed by Ansible, so don't need to do anything manually. \n"
              dest: /etc/motd          

        - name: start and enable ntp package on CentOS
          service:
              name: ntpd
              state: started
              enabled: yes
          when: ansible_os_family ==  "RedHat"

        - name: start and enable ntp service on ubuntu
          service:
                  name: ntp
                  state: started
                  enabled: yes
          when: ansible_os_family == "Debian"
          
        - name: copy the ntp.conf file in the form of template into remote RedHat family servers
          template:
                  src: ./ntp_RedHat.conf.j2
                  dest: /etc/ntp.conf
          when: ansible_os_family == "RedHat" 

        - name: copy the ntp.conf file in the form of template into remote Debian family servers
          template:
                  src: ./ntp_Debian.conf.j2
                  dest: /etc/ntp.conf
          when: ansible_os_family == "Debian"

        - name: after conf file changes CentOS servers needs to be  restart
          service:
                  name: ntpd
                  state: restarted
          when: ansible_distribution == "CentOS"

        - name: after conf file changes Ubuntu servers needs to be  restart
          service:
                  name: ntp
                  state: restarted
          when: ansible_distribution == "Ubuntu"
          
